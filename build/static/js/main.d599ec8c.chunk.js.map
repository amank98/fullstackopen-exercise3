{"version":3,"sources":["service/phoneService.tsx","App.tsx","index.tsx"],"names":["baseUrl","axios","get","then","response","data","person","post","id","newPerson","put","delete","AddedComponent","props","message","className","ErrorComponent","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","applyFilter","setApplyFilter","reset","resetState","addedMessage","setAddedMessage","errorMessage","setErrorMessage","useEffect","phoneService","people","onChange","event","preventDefault","target","value","onClick","onSubmit","foundPerson","find","name","window","confirm","number","createdPerson","setTimeout","length","concat","type","toLowerCase","map","catch","error","removePerson","ReactDOM","render","document","getElementById"],"mappings":"qMAIMA,EAAU,uDA6BD,EA3BG,kBACdC,IACCC,IAAIF,GACJG,MAAK,SAACC,GACH,OAAOA,EAASC,SAuBT,EAnBM,SAACC,GAAD,OACjBL,IACCM,KAAKP,EAASM,GACdH,MAAK,SAACC,GACH,OAAOA,EAASC,SAeT,EAZM,SAACG,EAAYC,GAAb,OACjBR,IACCS,IAAIV,EAAQ,IAAIQ,EAAIC,GACpBN,MAAK,SAACC,GACH,OAAOA,EAASC,SAQT,EALM,SAACG,GAAD,OACjBP,IACCU,OAAOX,EAAQ,IAAIQ,GACnBL,MAAK,SAACC,GAAD,OAAmBA,M,OCtBvBQ,EAAiB,SAACC,GACtB,IAAOC,EAAWD,EAAXC,QAEP,OAAKA,EAKH,qBAAKC,UAAU,QAAf,SACGD,IALI,MAULE,EAAiB,SAACH,GACtB,IAAOC,EAAWD,EAAXC,QAEP,OAAKA,EAKH,qBAAKC,UAAU,QAAf,SACGD,IALI,MAiIIG,EAtHH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAA8BN,mBAAS,IAAvC,mBAAQO,EAAR,KAAgBC,EAAhB,KACA,EAAuCR,oBAAS,GAAhD,mBAAQS,EAAR,KAAqBC,EAArB,KACA,EAA8BV,oBAAS,GAAvC,mBAAQW,EAAR,KAAeC,EAAf,KACA,EAA0CZ,mBAAS,MAAnD,mBAAQa,EAAR,KAAsBC,EAAtB,KACA,EAA0Cd,mBAAS,MAAnD,mBAAQe,EAAR,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,IAECjC,MAAK,SAACkC,GACLjB,EAAWiB,QAEZ,CAACR,EAAOE,IA+DX,OACE,gCACE,2CACA,cAAC,EAAD,CAAgBjB,QAASiB,IACzB,cAAC,EAAD,CAAgBjB,QAASmB,IACzB,kDACA,uBACEK,SA5BkB,SAACC,GACvBA,EAAMC,iBACNd,EAAUa,EAAME,OAAOC,UA4BrB,uBACA,wBACEC,QAAS,kBAAMf,GAAgBD,IADjC,SAGGA,EAAc,kBAAoB,mBAErC,yCACA,uBAAMiB,SA7EQ,SAACL,GACjBA,EAAMC,iBACN,IAAMK,EAAc1B,EAAQ2B,MAAK,SAAAxC,GAAM,OAAIA,EAAOyC,OAAS1B,KACtDwB,EAcCG,OAAOC,QAAQ5B,EAAU,uDAC3Be,EACcS,EAAYrC,GAD1B,2BACkCqC,GADlC,IAC+CK,OAAQ3B,KACtDpB,MAAK,SAACgD,GACLnB,EAAgB,WAAamB,EAAcJ,KAAO,sBAAwBI,EAAcD,QACxFE,YAAW,WACTpB,EAAgB,QACf,QApBPI,EACc,CAACW,KAAM1B,EAAS6B,OAAQ3B,EAAWf,GAAIW,EAAQkC,OAAO,IACnElD,MAAK,SAACgD,GACH/B,EAAWD,EAAQmC,OAAOH,IAC1BnB,EAAgB,SAAWmB,EAAcJ,MACzCK,YAAW,WACTpB,EAAgB,QACf,KACHV,EAAW,IACXE,EAAa,QAgEjB,UACE,uBACEkB,MAAOrB,EACPiB,SAlDa,SAACC,GACpBA,EAAMC,iBACNlB,EAAWiB,EAAME,OAAOC,UAkDpB,uBACA,uBACEA,MAAOnB,EACPe,SAlDe,SAACC,GACtBA,EAAMC,iBACNhB,EAAae,EAAME,OAAOC,UAkDtB,uBACA,wBAAQa,KAAK,SAAb,oBAEF,yCAEEpC,EACGM,QAAO,SAAAnB,GAAM,OAAIqB,EAAcrB,EAAOyC,KAAKS,gBAAkB/B,EAAO+B,cAAgBlD,KACpFmD,KAAI,SAAAnD,GAAM,OAAI,yCAAG,kCAAKA,EAAOyC,KAAZ,IAAmBzC,EAAO4C,OAA1B,OAAH,IAA0C,wBAAQP,QAAS,kBAjD7D,SAACrC,GAChB0C,OAAOC,QAAQ,gCAAkC3C,EAAOyC,KAAO,MACjEX,EACc9B,EAAOE,IACpBL,MAAK,SAACC,GACL0B,GAAYD,MAEb6B,OAAM,SAACC,GACNzB,EAAgB5B,EAAOyC,KAAO,qCAC9BK,YAAW,WACTlB,EAAgB,QACf,QAsC+E0B,CAAatD,IAApC,sBAA1C,cClJzBuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d599ec8c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { PersonInterface } from '../App'\r\n\r\n//const baseUrl = 'http://localhost:3001/api/people'\r\nconst baseUrl = 'https://frozen-tundra-12096.herokuapp.com/api/people'\r\n\r\nconst getPeople = () => \r\n    axios\r\n    .get(baseUrl)\r\n    .then((response: any) => {\r\n        return response.data\r\n    })\r\n\r\n\r\nconst createPerson = (person: PersonInterface) => \r\n    axios\r\n    .post(baseUrl, person)\r\n    .then((response: any) => {\r\n        return response.data\r\n    })\r\n\r\nconst updatePerson = (id: number, newPerson: PersonInterface) => \r\n    axios\r\n    .put(baseUrl+'/'+id, newPerson)\r\n    .then((response: any) => {\r\n        return response.data\r\n    })\r\n\r\nconst deletePerson = (id: number) =>\r\n    axios\r\n    .delete(baseUrl+'/'+id)\r\n    .then((response: any) => response)\r\n\r\nexport default { getPeople, createPerson, updatePerson, deletePerson }","import { useEffect, useState } from 'react'\nimport phoneService from './service/phoneService'\n\nexport interface PersonInterface {\n  id: number,\n  name: string,\n  number: string\n}\n\nconst AddedComponent = (props: { message: string | null}) => {\n  const {message} = props;\n\n  if (!message) {\n    return null\n  }\n\n  return (\n    <div className='added'>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorComponent = (props: { message: string | null}) => {\n  const {message} = props;\n\n  if (!message) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([] as PersonInterface[]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ applyFilter, setApplyFilter] = useState(false)\n  const [ reset, resetState ] = useState(true)\n  const [ addedMessage, setAddedMessage ] = useState(null as string | null)\n  const [ errorMessage, setErrorMessage ] = useState(null as string | null)\n\n  useEffect(() => {\n    phoneService\n    .getPeople()\n    .then((people: PersonInterface[]) => {\n      setPersons(people)\n    })\n  }, [reset, addedMessage])\n\n  const addPerson = (event: any) => {\n    event.preventDefault()\n    const foundPerson = persons.find(person => person.name === newName)\n    if (!foundPerson) {\n      phoneService\n      .createPerson({name: newName, number: newNumber, id: persons.length+1})\n      .then((createdPerson: PersonInterface) => {\n          setPersons(persons.concat(createdPerson))\n          setAddedMessage('Added ' + createdPerson.name)\n          setTimeout(() => {\n            setAddedMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n      })\n    }\n    else {\n      if (window.confirm(newName + \" already exists. Do you want to update the number?\")) {\n        phoneService\n        .updatePerson(foundPerson.id, {...foundPerson, number: newNumber})\n        .then((createdPerson: PersonInterface) => {\n          setAddedMessage(\"Updated \" + createdPerson.name + \"'s phone number to \" + createdPerson.number)\n          setTimeout(() => {\n            setAddedMessage(null)\n          }, 5000)\n        })\n      }\n    }\n  }\n\n  const onNameChange = (event: any) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const onNumberChange = (event: any) => {\n    event.preventDefault()\n    setNewNumber(event.target.value)\n  }\n\n  const setFilterChange = (event: any) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n  }\n\n  const removePerson = (person: PersonInterface) => {\n    if (window.confirm(\"Do you really want to remove \" + person.name + '?')) {\n      phoneService\n      .deletePerson(person.id)\n      .then((response: any) => {\n        resetState(!reset)\n      })\n      .catch((error: any) => {\n        setErrorMessage(person.name + ' was already removed from the db.')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <AddedComponent message={addedMessage}/>\n      <ErrorComponent message={errorMessage}/>\n      <p>filter shown with</p>\n      <input\n        onChange={setFilterChange}\n      />\n      <br/>\n      <button \n        onClick={() => setApplyFilter(!applyFilter)}\n      > \n        {applyFilter ? 'turn off filter' : 'turn on filter'} \n      </button>\n      <h2>add new</h2>\n      <form onSubmit={addPerson}>\n        <input \n          value={newName}\n          onChange={onNameChange}\n        />\n        <br/>\n        <input \n          value={newNumber}\n          onChange={onNumberChange}\n        />\n        <br/>\n        <button type=\"submit\">add</button>\n      </form>\n      <h2>Numbers</h2>\n      {\n        persons\n          .filter(person => applyFilter ? person.name.toLowerCase() === filter.toLowerCase() : person)\n          .map(person => <> <p> {person.name} {person.number} </p> <button onClick={() => removePerson(person)}> delete </button> </>)\n      }\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}